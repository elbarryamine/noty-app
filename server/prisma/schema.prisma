// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  String @id @default(uuid())
  firstName String?
  lastName  String?
  email String  @unique
  password String
  notes Note[]
  tasks Task[]
  folders Folder[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Note {
  id  String @id @default(uuid())
  title String
  text String
  color String @default("#FFFFFF")
  isPinned Boolean @default(false)
  isTrashed Boolean @default(false)
  isArchived Boolean @default(false)
  image String @default("")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  folder Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id  String @id @default(uuid())
  title String
  text String
  color String @default("#FFFFFF")
  isPinned Boolean @default(false)
  isTrashed Boolean @default(false)
  isArchived Boolean @default(false)
  image String @default("")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String
  folder Folder @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id  String @id @default(uuid())
  name String
  icon String?
  notes Note[]
  tasks Task[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  createdAt DateTime @default(now())
}